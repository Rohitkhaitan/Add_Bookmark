{"version":3,"sources":["bookmark.js","App.js","serviceWorker.js","index.js"],"names":["Bookmark","state","list","bookmark_name","description","image","title","url","grid","handleChange","event","_this","setState","target","value","handleChange1","fetchUrl","axios","post","q","key","then","res","concat","Object","toConsumableArray","data","console","log","gridView","_this2","this","classes","props","react_default","a","createElement","className","root","style","float","InputBase_default","id","placeholder","onChange","bootstrapRoot","input","bootstrapInput","Button_default","variant","button","onClick","src","alt","height","width","Grid_default","container","spacing","item","xs","map","Fragment","Paper_default","paper","ButtonBase_default","tagimage","tagimg","sm","direction","Typography_default","gutterBottom","href","color","cursor","controlimage","Component","withStyles","theme","flexGrow","margin","unit","label + &","marginTop","borderRadius","position","backgroundColor","palette","common","white","border","fontSize","padding","transition","transitions","create","fontFamily","join","&:focus","borderColor","boxShadow","maxWidth","display","maxHeight","img","App","open","handleDrawerOpen","handleDrawerClose","_classNames","_classNames2","CssBaseline_default","AppBar_default","classNames","appBar","Toolbar_default","IconButton_default","aria-label","menuButton","Menu_default","noWrap","Drawer_default","drawer","defineProperty","drawerOpen","drawerClose","toolbar","Divider_default","List_default","text","index","ListItem_default","ListItemIcon_default","MoveToInbox_default","Mail_default","ListItemText_default","primary","content","bookmark","zIndex","marginLeft","marginRight","hide","flexShrink","whiteSpace","easing","sharp","duration","enteringScreen","leavingScreen","overflowX","breakpoints","up","objectSpread","alignItems","justifyContent","mixins","withTheme","Boolean","window","location","hostname","match","ReactDOM","render","src_App_0","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.d3ccf9c2.chunk.js","sourcesContent":["import React, { Component } from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { withStyles } from '@material-ui/core/styles';\r\nimport Grid from '@material-ui/core/Grid';\r\nimport Paper from '@material-ui/core/Paper';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport ButtonBase from '@material-ui/core/ButtonBase';\r\nimport InputBase from '@material-ui/core/InputBase';\r\nimport Button from '@material-ui/core/Button';\r\nimport axios from 'axios'\r\n\r\nconst styles = theme => ({\r\n    root: {\r\n        flexGrow: 1,\r\n    },\r\n    button: {\r\n        margin: theme.spacing.unit,\r\n    },\r\n    bootstrapRoot: {\r\n        'label + &': {\r\n            marginTop: theme.spacing.unit * 3,\r\n        },\r\n    },\r\n    bootstrapInput: {\r\n        borderRadius: 4,\r\n        position: 'relative',\r\n        backgroundColor: theme.palette.common.white,\r\n        border: '1px solid #ced4da',\r\n        fontSize: 16,\r\n        width: 'auto',\r\n        padding: '10px 12px',\r\n        transition: theme.transitions.create(['border-color', 'box-shadow']),\r\n        // Use the system font instead of the default Roboto font.\r\n        fontFamily: [\r\n            '-apple-system',\r\n            'BlinkMacSystemFont',\r\n            '\"Segoe UI\"',\r\n            'Roboto',\r\n            '\"Helvetica Neue\"',\r\n            'Arial',\r\n            'sans-serif',\r\n            '\"Apple Color Emoji\"',\r\n            '\"Segoe UI Emoji\"',\r\n            '\"Segoe UI Symbol\"',\r\n        ].join(','),\r\n        '&:focus': {\r\n            borderRadius: 4,\r\n            borderColor: '#80bdff',\r\n            boxShadow: '0 0 0 0.2rem rgba(0,123,255,.25)',\r\n        },\r\n    },\r\n    paper: {\r\n        padding: theme.spacing.unit,\r\n        margin: 'auto',\r\n        maxWidth: 1200,\r\n    },\r\n    image: {\r\n        width: 32,\r\n        height: 32,\r\n    },\r\n    tagimage: {\r\n        width: 64,\r\n        height: 64,\r\n    },\r\n    controlimage: {\r\n        width: 32,\r\n        height: 32,\r\n    },\r\n    tagimg: {\r\n        margin: 'auto',\r\n        display: 'block',\r\n        maxWidth: '100%',\r\n        maxHeight: '100%',\r\n    },\r\n    img: {\r\n        margin: 'auto',\r\n        display: 'block',\r\n        maxWidth: '100%',\r\n        maxHeight: '100%',\r\n    },\r\n});\r\n\r\nclass Bookmark extends Component {\r\n    state = {\r\n        list: [\r\n            {\r\n                bookmark_name: \"Rohit\",\r\n                description: \"Search the world's information, including webpages, images, videos and more. Google has many special features to help you find exactly what you're looking for.\",\r\n                image: \"http://www.google.com/images/branding/googlelogo/1x/googlelogo_white_background_color_272x92dp.png\",\r\n                title: \"Google\",\r\n                url: \"http://www.google.com/\",\r\n            },\r\n            {\r\n                bookmark_name: \"Rohit\",\r\n                description: \"Enjoy the videos and music you love, upload original content, and share it all with friends, family, and the world on YouTube.\",\r\n                image: \"\",\r\n                title: \"YouTube\",\r\n                url: \"https://www.youtube.com/\"\r\n            },\r\n            {\r\n                bookmark_name: \"Rohit\",\r\n                description: \"Contains all examples of our Interactive & Dynamic Force-Directed Graphs with D3 blog post - ninjaconcept/d3-force-directed-graph\",\r\n                image: \"https://avatars3.githubusercontent.com/u/200890?s=400&v=4\",\r\n                title: \"ninjaconcept/d3-force-directed-graph\",\r\n                url: \"https://github.com/ninjaconcept/d3-force-directed-graph/blob/master/example/2-relations.html\",\r\n            }, {\r\n                bookmark_name: \"Rohit\",\r\n                description: \"Navigation drawers provide access to destinations in your app. Side sheets are surfaces containing supplementary content that are anchored to the left or right edge of the screen.\",\r\n                image: \"https://material-ui.com/static/brand.png\",\r\n                title: \"Drawer React component - Material-UI\",\r\n                url: \"https://material-ui.com/demos/drawers/\"\r\n            }],\r\n        url: '',\r\n        bookmark_name: '',\r\n        grid: 4,\r\n    };\r\n\r\n    componentDidMount() {\r\n        \r\n    }\r\n    handleChange = event => {\r\n        this.setState({ bookmark_name: event.target.value });\r\n    };\r\n    handleChange1 = event => {\r\n        this.setState({ url: event.target.value });\r\n    }\r\n\r\n    fetchUrl = () => {\r\n        axios.post(\r\n            'https://api.linkpreview.net',\r\n            {\r\n                q: this.state.url,\r\n                key: '5c834ec7e06841cfa81af29c6f2d8cacb44921722e753'\r\n            }).then(res => {\r\n                this.setState({\r\n                    list: [...this.state.list,\r\n                    { bookmark_name: this.state.bookmark_name, description: res.data.description, image: res.data.image, title: res.data.title, url: res.data.url }]\r\n                });\r\n                console.log(this.state.list);\r\n            })\r\n    }\r\n\r\n    gridView = data => {\r\n        if (this.state.grid === 12)\r\n            this.setState({ grid: 4 });\r\n        else\r\n            this.setState({ grid: 12 });\r\n    }\r\n\r\n    render() {\r\n        const { classes } = this.props;\r\n        return (\r\n            <div className={classes.root}>\r\n                <div style={{ float: 'center' }}>\r\n                    <InputBase\r\n                        id=\"bootstrap-input\"\r\n                        placeholder=\"Name\"\r\n                        onChange={this.handleChange}\r\n                        classes={{\r\n                            root: classes.bootstrapRoot,\r\n                            input: classes.bootstrapInput,\r\n                        }}\r\n                    />\r\n                    <InputBase\r\n                        id=\"bootstrap-input\"\r\n                        placeholder=\"Url\"\r\n                        onChange={this.handleChange1}\r\n                        classes={{\r\n                            root: classes.bootstrapRoot,\r\n                            input: classes.bootstrapInput,\r\n                        }}\r\n                    />\r\n                    <Button variant=\"contained\" className={classes.button} onClick={this.fetchUrl}>\r\n                        Save\r\n                    </Button>\r\n                </div>\r\n                <div style={{ float: 'right' }}>\r\n                    <div>\r\n                        {this.state.grid === 4 && <img src=\"../asset/list.png\" alt=\"\" height=\"25\" width=\"25\" onClick={this.gridView} />}\r\n                        {this.state.grid === 12 && <img src=\"../asset/grid.png\" alt=\"\" height=\"20\" width=\"20\" onClick={this.gridView} />}\r\n                    </div>\r\n                </div>\r\n                <Grid container spacing={8}>\r\n                    <Grid container item xs={12} spacing={8}>\r\n                        {this.state.list.map((data) => {\r\n                            return (\r\n                                <React.Fragment>\r\n                                    <Grid item xs={this.state.grid}>\r\n                                        <Paper className={classes.paper}>\r\n                                            <Grid container spacing={16}>\r\n                                                <Grid item>\r\n                                                    <ButtonBase className={classes.tagimage}>\r\n                                                        <img className={classes.tagimg} alt=\"complex\" src='../asset/bookmark.png' />\r\n                                                    </ButtonBase>\r\n                                                </Grid>\r\n                                                <Grid item xs={12} sm container>\r\n                                                    <Grid item xs container direction=\"column\" spacing={16}>\r\n                                                        <Grid item xs>\r\n                                                            <Typography gutterBottom variant=\"subtitle1\">\r\n                                                                {data.bookmark_name}\r\n                                                            </Typography>\r\n                                                            <Typography gutterBottom><a href={data.url}>{data.url}</a></Typography>\r\n                                                            <Typography color=\"textSecondary\"><img className={classes.image} alt=\"complex\" src={data.image} />\r\n                                                            {data.title}</Typography>\r\n                                                            <Typography gutterBottom>{data.description}</Typography>\r\n                                                        </Grid>\r\n                                                        <Grid item>\r\n                                                            <Typography style={{ cursor: 'pointer' }}>Remove</Typography>\r\n                                                        </Grid>\r\n                                                    </Grid>\r\n                                                    <Grid item>\r\n                                                        {true && <img className={classes.controlimage} alt=\"complex\" src='../asset/icons8-star-50.png' />}\r\n                                                        {false && <img className={classes.controlimage} alt=\"complex\" src='../asset/icons8-star-filled-48.png' />}\r\n                                                        <img className={classes.controlimage} alt=\"complex\" src='../asset/archive.png' />\r\n\r\n                                                    </Grid>\r\n                                                </Grid>\r\n                                            </Grid>\r\n                                        </Paper>\r\n                                    </Grid >\r\n                                </React.Fragment>\r\n                            );\r\n                        })}\r\n                    </Grid>\r\n                </Grid>\r\n            </div >\r\n        );\r\n    }\r\n}\r\n\r\nBookmark.propTypes = {\r\n    classes: PropTypes.object.isRequired,\r\n};\r\n\r\nexport default withStyles(styles)(Bookmark);","import React, { Component } from 'react';\nimport './App.css';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport { withStyles } from '@material-ui/core/styles';\nimport Drawer from '@material-ui/core/Drawer';\nimport AppBar from '@material-ui/core/AppBar';\nimport Toolbar from '@material-ui/core/Toolbar';\nimport List from '@material-ui/core/List';\nimport CssBaseline from '@material-ui/core/CssBaseline';\nimport Typography from '@material-ui/core/Typography';\nimport Divider from '@material-ui/core/Divider';\nimport IconButton from '@material-ui/core/IconButton';\nimport MenuIcon from '@material-ui/icons/Menu';\n// import ChevronLeftIcon from '@material-ui/icons/ChevronLeft';\n// import ChevronRightIcon from '@material-ui/icons/ChevronRight';\nimport ListItem from '@material-ui/core/ListItem';\nimport ListItemIcon from '@material-ui/core/ListItemIcon';\nimport ListItemText from '@material-ui/core/ListItemText';\nimport InboxIcon from '@material-ui/icons/MoveToInbox';\nimport MailIcon from '@material-ui/icons/Mail';\n\nimport Bookmark from './bookmark';\n\nconst drawerWidth = 240;\n\nconst styles = theme => ({\n  root: {\n    display: 'flex',\n  },\n  appBar: {\n    zIndex: theme.zIndex.drawer + 1,\n    // transition: theme.transitions.create(['width', 'margin'], {\n    //   easing: theme.transitions.easing.sharp,\n    //   duration: theme.transitions.duration.leavingScreen,\n    // }),\n  },\n  // appBarShift: {\n  //   marginLeft: drawerWidth,\n  //   width: `calc(100% - ${drawerWidth}px)`,\n  //   transition: theme.transitions.create(['width', 'margin'], {\n  //     easing: theme.transitions.easing.sharp,\n  //     duration: theme.transitions.duration.enteringScreen,\n  //   }),\n  // },\n  menuButton: {\n    marginLeft: 12,\n    marginRight: 36,\n  },\n  hide: {\n    display: 'none',\n  },\n  drawer: {\n    width: drawerWidth,\n    flexShrink: 0,\n    whiteSpace: 'nowrap',\n  },\n  drawerOpen: {\n    width: drawerWidth,\n    transition: theme.transitions.create('width', {\n      easing: theme.transitions.easing.sharp,\n      duration: theme.transitions.duration.enteringScreen,\n    }),\n  },\n  drawerClose: {\n    transition: theme.transitions.create('width', {\n      easing: theme.transitions.easing.sharp,\n      duration: theme.transitions.duration.leavingScreen,\n    }),\n    overflowX: 'hidden',\n    width: theme.spacing.unit * 7 + 1,\n    [theme.breakpoints.up('sm')]: {\n      width: theme.spacing.unit * 9 + 1,\n    },\n  },\n  toolbar: {\n    display: 'flex',\n    alignItems: 'center',\n    justifyContent: 'flex-end',\n    padding: '0 8px',\n    ...theme.mixins.toolbar,\n  },\n  content: {\n    flexGrow: 1,\n    padding: theme.spacing.unit * 3,\n  },\n});\n\nclass App extends Component {\n  state = {\n    open: false,\n  };\n\n  handleDrawerOpen = () => {\n    this.setState({ open: !this.state.open });\n  };\n\n  handleDrawerClose = () => {\n    this.setState({ open: false });\n  };\n\n  render() {\n    const { classes } = this.props;\n\n    return (\n      <div className={classes.root}>\n        <CssBaseline />\n        <AppBar\n          position=\"fixed\"\n          className={classNames(classes.appBar)}\n        >\n          <Toolbar>\n            <IconButton\n              color=\"inherit\"\n              aria-label=\"Open drawer\"\n              onClick={this.handleDrawerOpen}\n              className={classNames(classes.menuButton)}\n            >\n              <MenuIcon />\n            </IconButton>\n            <Typography variant=\"h6\" color=\"inherit\" noWrap>\n              Add Bookmark\n            </Typography>\n          </Toolbar>\n        </AppBar>\n        <Drawer\n          variant=\"permanent\"\n          className={classNames(classes.drawer, {\n            [classes.drawerOpen]: this.state.open,\n            [classes.drawerClose]: !this.state.open,\n          })}\n          classes={{\n            paper: classNames({\n              [classes.drawerOpen]: this.state.open,\n              [classes.drawerClose]: !this.state.open,\n            }),\n          }}\n          open={this.state.open}\n        >\n          <div className={classes.toolbar}>\n          </div>\n          <Divider />\n          <List>\n            {['Inbox', 'Starred', 'Send email', 'Drafts'].map((text, index) => (\n              <ListItem button key={text}>\n                <ListItemIcon>{index % 2 === 0 ? <InboxIcon /> : <MailIcon />}</ListItemIcon>\n                <ListItemText primary={text} />\n              </ListItem>\n            ))}\n          </List>\n          <Divider />\n          <List>\n            {['All mail', 'Trash', 'Spam'].map((text, index) => (\n              <ListItem button key={text}>\n                <ListItemIcon>{index % 2 === 0 ? <InboxIcon /> : <MailIcon />}</ListItemIcon>\n                <ListItemText primary={text} />\n              </ListItem>\n            ))}\n          </List>\n        </Drawer>\n        <main className={classes.content}>\n          <div className={classes.toolbar} />\n          <Bookmark/>\n        </main>\n      </div>\n    );\n  }\n}\n\nApp.propTypes = {\n  classes: PropTypes.object.isRequired,\n  theme: PropTypes.object.isRequired,\n};\n\nexport default withStyles(styles, { withTheme: true })(App);\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}